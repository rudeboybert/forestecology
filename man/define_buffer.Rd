% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial.R
\name{define_buffer}
\alias{define_buffer}
\title{Identify trees in the buffer region}
\usage{
define_buffer(growth_df, size, region)
}
\arguments{
\item{growth_df}{\code{\link{compute_growth}} data frame}

\item{region}{User specified boundary of study region}

\item{max_dist}{Maximum distance from a focal tree for another tree to be
considered a competitor tree}
}
\value{
The same \code{\link{growth_df}} data frame but with a new boolean
variable \code{buffer} indicating if a tree is in the study region buffer
area. This uses \code{\link{compute_buffer_region}} to define the boundary of the buffer region.
}
\description{
Identify trees in the buffer region
}
\examples{
library(tibble)
library(sfheaders)
library(ggplot2)

# Example square region to be buffered (as sf object)
region <- tibble(
  x = c(0, 0, 1, 1),
  y = c(0, 1, 1, 0)
) \%>\%
  sf_polygon()

study_points <- tibble(
 x = runif(50),
 y = runif(50) ) \%>\%
 sf_point()

# Size of buffer
size <- 0.05

# Identify whether points are within size of boundary
study_points <- study_points \%>\%
  define_buffer(size = size, region = region)

# Plot study points coded by whether they are within size of boundary
ggplot() +
  geom_sf(data = region) +
  geom_sf(data = study_points, aes(col = buffer))

}
\seealso{
\code{\link{compute_buffer_region}}
}
